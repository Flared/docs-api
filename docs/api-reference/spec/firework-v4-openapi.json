{
  "openapi": "3.1.0",
  "info": {
    "title": "Firework API",
    "version": "v4"
  },
  "servers": [
    {
      "url": "https://api.flare.io/firework/v4/"
    }
  ],
  "paths": {
    "/admin/cookies/configurations": {
      "get": {
        "summary": "List Cookie Monitoring Configurations",
        "operationId": "list_cookie_monitoring_configurations_admin_cookies_configurations_get",
        "parameters": [
          {
            "name": "from_",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From "
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderType",
              "default": "asc"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedCookieConfigurations"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cookies/monitor": {
      "post": {
        "summary": "Create Cookie Monitoring Configuration",
        "operationId": "create_cookie_monitoring_configuration_admin_cookies_monitor_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CookieMonitoringConfigurationItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/actors/{actor_name}/profile": {
      "get": {
        "summary": "Get Actor Profile",
        "operationId": "get_actor_profile_actors__actor_name__profile_get",
        "parameters": [
          {
            "name": "actor_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Actor Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/actors/{actor_name}/timeline": {
      "get": {
        "summary": "Get Actor Timeline",
        "operationId": "get_actor_timeline_actors__actor_name__timeline_get",
        "parameters": [
          {
            "name": "actor_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Actor Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorTimeline"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/": {
      "get": {
        "summary": "Tenant Alerts",
        "operationId": "tenant_alerts_alerts__get",
        "parameters": [
          {
            "name": "from_",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From "
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "default": 10,
              "title": "Size"
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderType",
              "default": "asc"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "feed_owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Feed Owner Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_Alert_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Alert",
        "operationId": "create_alert_alerts__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlert"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/{alert_id}": {
      "patch": {
        "summary": "Update Alert",
        "operationId": "update_alert_alerts__alert_id__patch",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialAlert"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Alert",
        "operationId": "delete_alert_alerts__alert_id__delete",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Tenant Alert",
        "operationId": "get_tenant_alert_alerts__alert_id__get",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/channels": {
      "get": {
        "summary": "Alert Channels",
        "operationId": "alert_channels_alerts_channels_get",
        "parameters": [
          {
            "name": "from_",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From "
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "default": 10,
              "title": "Size"
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderType",
              "default": "asc"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_PartialAlertChannel_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Channel",
        "operationId": "create_channel_alerts_channels_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlertChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertChannel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/channels/{alert_channel_id}": {
      "delete": {
        "summary": "Delete Channel",
        "operationId": "delete_channel_alerts_channels__alert_channel_id__delete",
        "parameters": [
          {
            "name": "alert_channel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Channel Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Channel",
        "operationId": "update_channel_alerts_channels__alert_channel_id__put",
        "parameters": [
          {
            "name": "alert_channel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Channel Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlertChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Alert Channel",
        "operationId": "get_alert_channel_alerts_channels__alert_channel_id__get",
        "parameters": [
          {
            "name": "alert_channel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Channel Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertChannel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/": {
      "post": {
        "summary": "Bulk Actions",
        "operationId": "bulk_actions_tasks__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkActionsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_EnrichedBulkAction_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/credential_validations": {
      "get": {
        "summary": "Get Credential Validations",
        "operationId": "get_credential_validations_integrations_credential_validations_get",
        "parameters": [
          {
            "name": "credential_hash",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Credential Hash"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_CredentialValidationReponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Validate Credentials",
        "operationId": "validate_credentials_integrations_credential_validations_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialValidationRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialValidationReponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/credentials/entra-id/validate": {
      "post": {
        "summary": "Validate Credentials",
        "operationId": "validate_credentials_credentials_entra_id_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatedCredential"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/tenant/_search": {
      "post": {
        "summary": "Current Tenant Feed",
        "operationId": "current_tenant_feed_events_tenant__search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_FeedItem_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/global/_search": {
      "post": {
        "summary": "Global Search",
        "operationId": "global_search_events_global__search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalSearchRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_FeedItem_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/identifiers/{identifier_id}/_search": {
      "post": {
        "summary": "Identifier Feed",
        "operationId": "identifier_feed_events_identifiers__identifier_id___search_post",
        "parameters": [
          {
            "name": "identifier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Identifier Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_FeedItem_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/identifier_groups/{identifier_group_id}/_search": {
      "post": {
        "summary": "Identifier Group Feed",
        "operationId": "identifier_group_feed_events_identifier_groups__identifier_group_id___search_post",
        "parameters": [
          {
            "name": "identifier_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Identifier Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_FeedItem_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/filters/types": {
      "get": {
        "summary": "Fetch Filters Source Types",
        "operationId": "fetch_filters_source_types_events_filters_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterSourceTypes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/filters/severities": {
      "get": {
        "summary": "Fetch Filters Risk Score",
        "operationId": "fetch_filters_risk_score_events_filters_severities_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterSeverities"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/actions": {
      "post": {
        "summary": "Event Actions",
        "operationId": "event_actions_events_actions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventActionsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/file_analysis/submit": {
      "post": {
        "summary": "Submit Presigned Url",
        "operationId": "submit_presigned_url_file_analysis_submit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileAnalysisSubmit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/healthz/": {
      "get": {
        "summary": "Is Api Up And Running",
        "operationId": "is_api_up_and_running_healthz__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Is Api Up And Running Healthz  Get"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{report_id}": {
      "get": {
        "summary": "Get Report",
        "operationId": "get_report_reports__report_id__get",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firework__backend__api4__reports__report_datamodels__ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/reports/": {
      "get": {
        "summary": "List Reports",
        "operationId": "list_reports_reports__get",
        "parameters": [
          {
            "name": "from_",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From "
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "exclusiveMinimum": 0,
              "default": 20,
              "title": "Size"
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderType",
              "default": "desc"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortType",
              "default": "updated_at"
            }
          },
          {
            "name": "report_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/pyro__reports__report_models__ReportType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Report Types"
            }
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Archived"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firework__backend__api4__models__PaginatedResults_Report___1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Report",
        "operationId": "create_report_reports__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreationPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firework__backend__api4__reports__report_datamodels__ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/tenant_integrations/": {
      "get": {
        "summary": "Get Tenant Integrations",
        "operationId": "get_tenant_integrations_integrations_tenant_integrations__get",
        "parameters": [
          {
            "name": "from_",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From "
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderType",
              "default": "asc"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_TenantIntegration_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Tenant Integration",
        "operationId": "create_tenant_integration_integrations_tenant_integrations__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantIntegration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/tenant_integrations/{tenant_integration_id}": {
      "get": {
        "summary": "Get Tenant Integration",
        "operationId": "get_tenant_integration_integrations_tenant_integrations__tenant_integration_id__get",
        "parameters": [
          {
            "name": "tenant_integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Integration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Tenant Integration",
        "operationId": "update_tenant_integration_integrations_tenant_integrations__tenant_integration_id__put",
        "parameters": [
          {
            "name": "tenant_integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantIntegration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/threat_flow/reports/": {
      "get": {
        "summary": "List Reports",
        "operationId": "list_reports_threat_flow_reports__get",
        "parameters": [
          {
            "name": "from_",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From "
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Size"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderType",
              "default": "desc"
            }
          },
          {
            "name": "report_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/pyro__threat_flow__core__reports__report_store__ReportType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Report Types"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firework__backend__api4__models__PaginatedResults_Report___2"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/threat_flow/reports/{report_id}": {
      "get": {
        "summary": "Get Report",
        "operationId": "get_report_threat_flow_reports__report_id__get",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pyro__threat_flow__web__v4__reports__models__ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Report",
        "operationId": "delete_report_threat_flow_reports__report_id__delete",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/threat_flow/reports/{report_id}/download": {
      "get": {
        "summary": "Download Report",
        "operationId": "download_report_threat_flow_reports__report_id__download_get",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ThreatFlowReportDownloadFormat",
              "default": "docx"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/threat_flow/unit_summary/related_conversation": {
      "post": {
        "summary": "Get Related Conversation",
        "operationId": "get_related_conversation_threat_flow_unit_summary_related_conversation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelatedConversationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelatedConversationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/threat_flow/tags/": {
      "get": {
        "summary": "List Tags",
        "operationId": "list_tags_threat_flow_tags__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagListPayload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/threat_flow/tenant_config/": {
      "get": {
        "summary": "Get And Create Tenant Config",
        "operationId": "get_and_create_tenant_config_threat_flow_tenant_config__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreatFlowTenantConfigPayload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Create Or Update Tenant Config",
        "operationId": "create_or_update_tenant_config_threat_flow_tenant_config__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreatFlowTenantConfigPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreatFlowTenantConfigPayload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/threat_flow/conversation_summary_requests/": {
      "put": {
        "summary": "Create Conversation Summary Request",
        "operationId": "create_conversation_summary_request_threat_flow_conversation_summary_requests__put",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationSummaryRequestPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationSummaryRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Conversation Summary Requests",
        "operationId": "list_conversation_summary_requests_threat_flow_conversation_summary_requests__get",
        "parameters": [
          {
            "name": "from_",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From "
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Size"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderType",
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_ConversationSummaryRequestResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/threat_flow/reports/requests": {
      "post": {
        "summary": "Create Report Request",
        "operationId": "create_report_request_threat_flow_reports_requests_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/threat_flow/reports/requests/{request_info_id}": {
      "get": {
        "summary": "Get Report Request",
        "operationId": "get_report_request_threat_flow_reports_requests__request_info_id__get",
        "parameters": [
          {
            "name": "request_info_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Request Info Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRequestInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityModelName": {
        "type": "string",
        "enum": [
          "account",
          "actor",
          "ad",
          "attachment",
          "blog_post",
          "bot",
          "bucket",
          "bucket_object",
          "cc",
          "cc_bases",
          "chat_message",
          "document",
          "domain",
          "driller",
          "driller_forum_post",
          "driller_forum_topic",
          "driller_google",
          "driller_profile",
          "driller_source_code",
          "event",
          "experimental",
          "forum_category",
          "forum_post",
          "forum_profile",
          "forum_topic",
          "host",
          "leak",
          "leaked_data",
          "leaked_file",
          "leaked_credential",
          "listing",
          "lookalike",
          "paste",
          "ransomleak",
          "ransomleak_file_listing",
          "score_event",
          "seller",
          "service",
          "social_media_account",
          "stealer_log",
          "attachment/telegram",
          "chat_message/telegram",
          "threat_flow_summary",
          "whois"
        ],
        "title": "ActivityModelName"
      },
      "ActorProfile": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "first_seen": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Seen"
          },
          "last_seen": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Seen"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "active_sources": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Active Sources"
          }
        },
        "type": "object",
        "required": [
          "name",
          "active_sources"
        ],
        "title": "ActorProfile"
      },
      "ActorTimeline": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "interval": {
            "$ref": "#/components/schemas/OverTimeInterval"
          },
          "timeline": {
            "items": {
              "$ref": "#/components/schemas/ActorTimelineEntry"
            },
            "type": "array",
            "title": "Timeline"
          }
        },
        "type": "object",
        "required": [
          "name",
          "interval",
          "timeline"
        ],
        "title": "ActorTimeline"
      },
      "ActorTimelineEntry": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "date",
          "count"
        ],
        "title": "ActorTimelineEntry"
      },
      "Alert": {
        "properties": {
          "feed_definition": {
            "$ref": "#/components/schemas/FeedDefinition"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tenant_id": {
            "type": "integer",
            "title": "Tenant Id"
          },
          "organization_id": {
            "type": "integer",
            "title": "Organization Id"
          },
          "search_types": {
            "items": {
              "$ref": "#/components/schemas/SearchType"
            },
            "type": "array",
            "title": "Search Types"
          },
          "experimental_search_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Experimental Search Types"
          },
          "risks": {
            "items": {
              "$ref": "#/components/schemas/RiskScore"
            },
            "type": "array",
            "title": "Risks"
          },
          "alert_channel_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alert Channel Id"
          },
          "alert_channel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AlertChannelSummary"
              },
              {
                "type": "null"
              }
            ]
          },
          "frequency": {
            "type": "number",
            "title": "Frequency"
          },
          "start_at": {
            "type": "string",
            "title": "Start At"
          },
          "identifier_scope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdentifierScope"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "feed_definition",
          "type",
          "created_at",
          "id",
          "name",
          "tenant_id",
          "organization_id",
          "search_types",
          "experimental_search_types",
          "risks",
          "alert_channel_id",
          "alert_channel",
          "frequency",
          "start_at"
        ],
        "title": "Alert"
      },
      "AlertChannel": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/AlertType"
          },
          "state": {
            "$ref": "#/components/schemas/AlertChannelState"
          },
          "params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AlertChannelEmailParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelSlackParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelDiscordParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelSplunkParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelChannelParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelSentinelParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelCgcdParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelTeamsParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelJiraParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelServicenowParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelWebhookParams"
              }
            ],
            "title": "Params",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "azure_sentinel": "#/components/schemas/AlertChannelSentinelParams",
                "cgcd": "#/components/schemas/AlertChannelCgcdParams",
                "channel": "#/components/schemas/AlertChannelChannelParams",
                "discord": "#/components/schemas/AlertChannelDiscordParams",
                "email": "#/components/schemas/AlertChannelEmailParams",
                "jira": "#/components/schemas/AlertChannelJiraParams",
                "servicenow": "#/components/schemas/AlertChannelServicenowParams",
                "slack": "#/components/schemas/AlertChannelSlackParams",
                "splunk": "#/components/schemas/AlertChannelSplunkParams",
                "teams": "#/components/schemas/AlertChannelTeamsParams",
                "webhook": "#/components/schemas/AlertChannelWebhookParams"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "state",
          "params"
        ],
        "title": "AlertChannel"
      },
      "AlertChannelCgcdParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "cgcd",
            "title": "Type"
          },
          "emails": {
            "type": "string",
            "title": "Emails"
          },
          "smtp_host": {
            "type": "string",
            "title": "Smtp Host"
          },
          "smtp_port": {
            "type": "integer",
            "title": "Smtp Port"
          },
          "smtp_username": {
            "type": "string",
            "title": "Smtp Username"
          },
          "smtp_password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Smtp Password"
          },
          "cipher_password": {
            "type": "string",
            "title": "Cipher Password"
          }
        },
        "type": "object",
        "required": [
          "type",
          "emails",
          "smtp_host",
          "smtp_port",
          "smtp_username",
          "smtp_password",
          "cipher_password"
        ],
        "title": "AlertChannelCgcdParams"
      },
      "AlertChannelChannelParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "channel",
            "title": "Type"
          },
          "alert_channel_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alert Channel Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "alert_channel_id"
        ],
        "title": "AlertChannelChannelParams"
      },
      "AlertChannelDiscordParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "discord",
            "title": "Type"
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url"
          }
        },
        "type": "object",
        "required": [
          "type",
          "webhook_url"
        ],
        "title": "AlertChannelDiscordParams"
      },
      "AlertChannelEmailParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "email",
            "title": "Type"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "json_attachment": {
            "type": "boolean",
            "title": "Json Attachment",
            "default": false
          },
          "csv_attachment": {
            "type": "boolean",
            "title": "Csv Attachment",
            "default": false
          },
          "subject_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject Tag"
          },
          "language": {
            "$ref": "#/components/schemas/Language",
            "default": "en"
          }
        },
        "type": "object",
        "required": [
          "type",
          "email"
        ],
        "title": "AlertChannelEmailParams"
      },
      "AlertChannelJiraParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "jira",
            "title": "Type"
          },
          "server_netloc": {
            "type": "string",
            "title": "Server Netloc"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "api_token": {
            "type": "string",
            "title": "Api Token"
          },
          "project_key": {
            "type": "string",
            "title": "Project Key"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Labels",
            "default": []
          },
          "issue_type": {
            "type": "string",
            "title": "Issue Type"
          }
        },
        "type": "object",
        "required": [
          "type",
          "server_netloc",
          "email",
          "api_token",
          "project_key",
          "issue_type"
        ],
        "title": "AlertChannelJiraParams"
      },
      "AlertChannelSentinelParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "azure_sentinel",
            "title": "Type"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "shared_key": {
            "type": "string",
            "title": "Shared Key"
          }
        },
        "type": "object",
        "required": [
          "type",
          "workspace_id",
          "shared_key"
        ],
        "title": "AlertChannelSentinelParams"
      },
      "AlertChannelServicenowParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "servicenow",
            "title": "Type"
          },
          "server_url": {
            "type": "string",
            "title": "Server Url"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "table_name": {
            "type": "string",
            "title": "Table Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "server_url",
          "username",
          "password",
          "table_name"
        ],
        "title": "AlertChannelServicenowParams"
      },
      "AlertChannelSlackParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "slack",
            "title": "Type"
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url"
          }
        },
        "type": "object",
        "required": [
          "type",
          "webhook_url"
        ],
        "title": "AlertChannelSlackParams"
      },
      "AlertChannelSplunkParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "splunk",
            "title": "Type"
          },
          "api_token": {
            "type": "string",
            "title": "Api Token"
          },
          "netloc": {
            "type": "string",
            "title": "Netloc"
          },
          "index": {
            "type": "string",
            "title": "Index"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Labels",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "type",
          "api_token",
          "netloc",
          "index"
        ],
        "title": "AlertChannelSplunkParams"
      },
      "AlertChannelState": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/AlertChannelStatus"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "AlertChannelState"
      },
      "AlertChannelStatus": {
        "type": "string",
        "enum": [
          "untested",
          "error",
          "success"
        ],
        "title": "AlertChannelStatus"
      },
      "AlertChannelSummary": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "AlertChannelSummary"
      },
      "AlertChannelTeamsParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "teams",
            "title": "Type"
          },
          "teams_webhook_url": {
            "type": "string",
            "title": "Teams Webhook Url"
          }
        },
        "type": "object",
        "required": [
          "type",
          "teams_webhook_url"
        ],
        "title": "AlertChannelTeamsParams"
      },
      "AlertChannelWebhookParams": {
        "properties": {
          "type": {
            "type": "string",
            "const": "webhook",
            "title": "Type"
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url"
          },
          "secret": {
            "type": "string",
            "title": "Secret"
          },
          "basic_auth": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WebhookBasicAuth"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "type",
          "webhook_url",
          "secret"
        ],
        "title": "AlertChannelWebhookParams"
      },
      "AlertType": {
        "type": "string",
        "enum": [
          "email",
          "channel",
          "azure_sentinel",
          "slack",
          "discord",
          "splunk",
          "cgcd",
          "jira",
          "teams",
          "servicenow",
          "webhook"
        ],
        "title": "AlertType"
      },
      "ApiReport": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "format_type": {
            "$ref": "#/components/schemas/ThreatFlowReportFormatType",
            "default": "simple_summary"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "highlights": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Highlights"
          },
          "related_activity_uids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Related Activity Uids"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "subtitle",
          "summary",
          "content",
          "tags",
          "highlights",
          "related_activity_uids",
          "created_at",
          "tenant_id"
        ],
        "title": "ApiReport"
      },
      "AssetType": {
        "type": "string",
        "enum": [
          "github_repository",
          "username",
          "domain",
          "brand",
          "name",
          "keyword",
          "search_query",
          "dork_query",
          "bin",
          "ip",
          "email",
          "account",
          "secret",
          "credentials",
          "favicon",
          "screenshot",
          "azure_tenant",
          "actor",
          "cve"
        ],
        "title": "AssetType"
      },
      "AzureTenantQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "azure_tenant",
            "title": "Type"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "tenant_id"
        ],
        "title": "AzureTenantQuery"
      },
      "BinQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "bin",
            "title": "Type"
          },
          "bin": {
            "type": "string",
            "title": "Bin"
          }
        },
        "type": "object",
        "required": [
          "type",
          "bin"
        ],
        "title": "BinQuery"
      },
      "BrandQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "brand",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "title": "BrandQuery"
      },
      "BulkActionStatus": {
        "type": "string",
        "enum": [
          "ongoing",
          "completed",
          "pending"
        ],
        "title": "BulkActionStatus"
      },
      "BulkActionTargetType": {
        "type": "string",
        "enum": [
          "identifier",
          "feed",
          "group",
          "identifier_recommendation",
          "identifier_recommendation_group"
        ],
        "title": "BulkActionTargetType"
      },
      "BulkActionType": {
        "type": "string",
        "enum": [
          "clean_feed",
          "move_feed",
          "materializing",
          "enable",
          "disable",
          "disable_tenant",
          "delete",
          "export",
          "move",
          "edit",
          "update_count",
          "accept_recommendation",
          "reject_recommendation"
        ],
        "title": "BulkActionType"
      },
      "BulkActionsRequestBody": {
        "properties": {
          "statuses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/BulkActionStatus"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Statuses"
          },
          "include_errors": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Errors"
          },
          "created_after": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created After",
            "default": "2025-03-18T15:44:56.726208Z"
          },
          "from": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From"
          },
          "size": {
            "type": "integer",
            "maximum": 20.0,
            "exclusiveMinimum": 0.0,
            "title": "Size",
            "default": 20
          }
        },
        "type": "object",
        "title": "BulkActionsRequestBody"
      },
      "ConversationMessage": {
        "properties": {
          "uid": {
            "type": "string",
            "title": "Uid"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "author_name": {
            "type": "string",
            "title": "Author Name"
          },
          "date_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Time"
          }
        },
        "type": "object",
        "required": [
          "uid",
          "message",
          "author_name",
          "date_time"
        ],
        "title": "ConversationMessage"
      },
      "ConversationSearchAfterDirection": {
        "type": "string",
        "enum": [
          "next",
          "previous"
        ],
        "title": "ConversationSearchAfterDirection"
      },
      "ConversationSummaryRequestPayload": {
        "properties": {
          "conversation_uid": {
            "type": "string",
            "title": "Conversation Uid"
          },
          "report_title": {
            "type": "string",
            "title": "Report Title"
          },
          "time_range_type": {
            "$ref": "#/components/schemas/TimeRangeType",
            "default": "last_24h"
          },
          "time_range_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Range From"
          },
          "time_range_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Range To"
          }
        },
        "type": "object",
        "required": [
          "conversation_uid",
          "report_title"
        ],
        "title": "ConversationSummaryRequestPayload"
      },
      "ConversationSummaryRequestResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "conversation_uid": {
            "type": "string",
            "title": "Conversation Uid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "report_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Report Title"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "time_range_from": {
            "type": "string",
            "format": "date-time",
            "title": "Time Range From"
          },
          "time_range_to": {
            "type": "string",
            "format": "date-time",
            "title": "Time Range To"
          }
        },
        "type": "object",
        "required": [
          "id",
          "conversation_uid",
          "created_at",
          "updated_at",
          "report_title",
          "tenant_id",
          "time_range_from",
          "time_range_to"
        ],
        "title": "ConversationSummaryRequestResponse"
      },
      "CookieMonitoringConfigurationItem": {
        "properties": {
          "domain": {
            "type": "string",
            "title": "Domain"
          },
          "tenant_id": {
            "type": "integer",
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "domain",
          "tenant_id"
        ],
        "title": "CookieMonitoringConfigurationItem"
      },
      "CreateAlert": {
        "properties": {
          "feed_definition": {
            "$ref": "#/components/schemas/FeedDefinition"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "search_types": {
            "items": {
              "$ref": "#/components/schemas/SearchType"
            },
            "type": "array",
            "title": "Search Types"
          },
          "experimental_search_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Experimental Search Types"
          },
          "risks": {
            "items": {
              "$ref": "#/components/schemas/RiskScore"
            },
            "type": "array",
            "title": "Risks"
          },
          "frequency": {
            "type": "number",
            "title": "Frequency"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "title": "Start At"
          },
          "alert_channel_id": {
            "type": "integer",
            "title": "Alert Channel Id"
          }
        },
        "type": "object",
        "required": [
          "feed_definition",
          "name",
          "search_types",
          "experimental_search_types",
          "risks",
          "frequency",
          "start_at",
          "alert_channel_id"
        ],
        "title": "CreateAlert"
      },
      "CreateAlertChannel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AlertChannelEmailParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelSlackParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelDiscordParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelSplunkParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelChannelParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelSentinelParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelCgcdParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelTeamsParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelJiraParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelServicenowParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelWebhookParams"
              }
            ],
            "title": "Params",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "azure_sentinel": "#/components/schemas/AlertChannelSentinelParams",
                "cgcd": "#/components/schemas/AlertChannelCgcdParams",
                "channel": "#/components/schemas/AlertChannelChannelParams",
                "discord": "#/components/schemas/AlertChannelDiscordParams",
                "email": "#/components/schemas/AlertChannelEmailParams",
                "jira": "#/components/schemas/AlertChannelJiraParams",
                "servicenow": "#/components/schemas/AlertChannelServicenowParams",
                "slack": "#/components/schemas/AlertChannelSlackParams",
                "splunk": "#/components/schemas/AlertChannelSplunkParams",
                "teams": "#/components/schemas/AlertChannelTeamsParams",
                "webhook": "#/components/schemas/AlertChannelWebhookParams"
              }
            }
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AlertChannelState"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "params"
        ],
        "title": "CreateAlertChannel"
      },
      "CreateTenantIntegration": {
        "properties": {
          "tenant_id": {
            "type": "integer",
            "title": "Tenant Id"
          },
          "params": {
            "$ref": "#/components/schemas/EntraIDParams"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "params"
        ],
        "title": "CreateTenantIntegration"
      },
      "CredentialId": {
        "properties": {
          "credential_id": {
            "type": "integer",
            "title": "Credential Id"
          }
        },
        "type": "object",
        "required": [
          "credential_id"
        ],
        "title": "CredentialId"
      },
      "CredentialValidationReponse": {
        "properties": {
          "tenant_integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Integration Id"
          },
          "credential_hash": {
            "type": "string",
            "title": "Credential Hash"
          },
          "tenant_id": {
            "type": "integer",
            "title": "Tenant Id"
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid"
          },
          "status": {
            "$ref": "#/components/schemas/CredentialValidationStatus"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "tenant_integration_id",
          "credential_hash",
          "tenant_id",
          "uuid",
          "status",
          "updated_at"
        ],
        "title": "CredentialValidationReponse"
      },
      "CredentialValidationRequestBody": {
        "properties": {
          "tenant_integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Integration Id"
          },
          "credential_hash": {
            "type": "string",
            "title": "Credential Hash"
          }
        },
        "type": "object",
        "required": [
          "tenant_integration_id",
          "credential_hash"
        ],
        "title": "CredentialValidationRequestBody"
      },
      "CredentialValidationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "valid",
          "invalid"
        ],
        "title": "CredentialValidationStatus"
      },
      "CredentialsQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "credentials",
            "title": "Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "type",
          "username",
          "password"
        ],
        "title": "CredentialsQuery"
      },
      "DomainQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "domain",
            "title": "Type"
          },
          "fqdn": {
            "type": "string",
            "title": "Fqdn"
          }
        },
        "type": "object",
        "required": [
          "type",
          "fqdn"
        ],
        "title": "DomainQuery"
      },
      "EmailQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "email",
            "title": "Type"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "type",
          "email"
        ],
        "title": "EmailQuery"
      },
      "EnrichedBulkAction": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "type": {
            "$ref": "#/components/schemas/BulkActionType"
          },
          "status": {
            "$ref": "#/components/schemas/BulkActionStatus"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "targets": {
            "items": {
              "$ref": "#/components/schemas/EnrichedBulkActionTarget"
            },
            "type": "array",
            "title": "Targets"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "status",
          "error",
          "targets"
        ],
        "title": "EnrichedBulkAction"
      },
      "EnrichedBulkActionTarget": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BulkActionTargetType"
          },
          "item_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Item Ids"
          },
          "filters": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IdentifierRecommendationFilters"
                  },
                  {
                    "$ref": "#/components/schemas/IdentifierRecommendationGroupFilters"
                  },
                  {
                    "$ref": "#/components/schemas/GroupFilters"
                  },
                  {
                    "$ref": "#/components/schemas/IdentifierFilters"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "group": "#/components/schemas/GroupFilters",
                    "identifier": "#/components/schemas/IdentifierFilters",
                    "identifier_recommendation": "#/components/schemas/IdentifierRecommendationFilters",
                    "identifier_recommendation_group": "#/components/schemas/IdentifierRecommendationGroupFilters"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "is_completed": {
            "type": "boolean",
            "title": "Is Completed"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "type",
          "item_ids",
          "filters",
          "is_completed",
          "error"
        ],
        "title": "EnrichedBulkActionTarget"
      },
      "EntraIDParams": {
        "properties": {
          "params_type": {
            "type": "string",
            "const": "entra_id",
            "title": "Params Type",
            "default": "entra_id"
          },
          "entra_client_id": {
            "type": "string",
            "title": "Entra Client Id"
          },
          "entra_client_secret": {
            "type": "string",
            "title": "Entra Client Secret"
          },
          "entra_tenant_id": {
            "type": "string",
            "title": "Entra Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "entra_client_id",
          "entra_client_secret",
          "entra_tenant_id"
        ],
        "title": "EntraIDParams"
      },
      "EventAction": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LeakedCredentialsBulkActionType"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "EventAction"
      },
      "EventActionTarget": {
        "properties": {
          "uid": {
            "type": "string",
            "title": "Uid"
          }
        },
        "type": "object",
        "required": [
          "uid"
        ],
        "title": "EventActionTarget"
      },
      "EventActionsBody": {
        "properties": {
          "targets": {
            "items": {
              "$ref": "#/components/schemas/EventActionTarget"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Targets"
          },
          "action": {
            "$ref": "#/components/schemas/EventAction"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "EventActionsBody"
      },
      "FeedDateFilter": {
        "properties": {
          "gt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gt"
          },
          "gte": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gte"
          },
          "lt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lt"
          },
          "lte": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lte"
          }
        },
        "type": "object",
        "title": "FeedDateFilter"
      },
      "FeedDefinition": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FeedType"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "FeedDefinition"
      },
      "FeedFilters": {
        "properties": {
          "severity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Severity"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/Severity"
                },
                "type": "array"
              }
            ],
            "title": "Severity"
          },
          "type": {
            "items": {
              "$ref": "#/components/schemas/SearchType"
            },
            "type": "array",
            "title": "Type"
          },
          "estimated_created_at": {
            "$ref": "#/components/schemas/FeedDateFilter"
          },
          "materialized_at": {
            "$ref": "#/components/schemas/FeedDateFilter"
          }
        },
        "type": "object",
        "title": "FeedFilters"
      },
      "FeedItem": {
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/FeedItemMetadata"
          },
          "tenant_metadata": {
            "$ref": "#/components/schemas/FeedItemTenantMetadata"
          },
          "identifiers": {
            "items": {
              "$ref": "#/components/schemas/FeedItemIdentifier"
            },
            "type": "array",
            "title": "Identifiers"
          },
          "highlights": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Highlights"
          }
        },
        "type": "object",
        "required": [
          "metadata"
        ],
        "title": "FeedItem"
      },
      "FeedItemIdentifier": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "FeedItemIdentifier"
      },
      "FeedItemMetadata": {
        "properties": {
          "uid": {
            "type": "string",
            "title": "Uid"
          },
          "estimated_created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Estimated Created At"
          },
          "type": {
            "$ref": "#/components/schemas/ActivityModelName"
          },
          "severity": {
            "$ref": "#/components/schemas/Severity"
          }
        },
        "type": "object",
        "required": [
          "uid",
          "estimated_created_at",
          "type",
          "severity"
        ],
        "title": "FeedItemMetadata"
      },
      "FeedItemTenantMetadata": {
        "properties": {
          "severity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedItemTenantMetadataSeverity"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "title": "FeedItemTenantMetadata"
      },
      "FeedItemTenantMetadataSeverity": {
        "properties": {
          "original": {
            "$ref": "#/components/schemas/Severity"
          },
          "override": {
            "$ref": "#/components/schemas/Severity"
          }
        },
        "type": "object",
        "required": [
          "original",
          "override"
        ],
        "title": "FeedItemTenantMetadataSeverity"
      },
      "FeedOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "title": "FeedOrder"
      },
      "FeedRequestBody": {
        "properties": {
          "query": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GithubRepositoryQuery"
                  },
                  {
                    "$ref": "#/components/schemas/UsernameQuery"
                  },
                  {
                    "$ref": "#/components/schemas/DomainQuery"
                  },
                  {
                    "$ref": "#/components/schemas/BrandQuery"
                  },
                  {
                    "$ref": "#/components/schemas/NameQuery"
                  },
                  {
                    "$ref": "#/components/schemas/KeywordQuery"
                  },
                  {
                    "$ref": "#/components/schemas/QueryStringQuery"
                  },
                  {
                    "$ref": "#/components/schemas/BinQuery"
                  },
                  {
                    "$ref": "#/components/schemas/IpQuery"
                  },
                  {
                    "$ref": "#/components/schemas/EmailQuery"
                  },
                  {
                    "$ref": "#/components/schemas/SecretQuery"
                  },
                  {
                    "$ref": "#/components/schemas/CredentialsQuery"
                  },
                  {
                    "$ref": "#/components/schemas/AzureTenantQuery"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "azure_tenant": "#/components/schemas/AzureTenantQuery",
                    "bin": "#/components/schemas/BinQuery",
                    "brand": "#/components/schemas/BrandQuery",
                    "credentials": "#/components/schemas/CredentialsQuery",
                    "domain": "#/components/schemas/DomainQuery",
                    "email": "#/components/schemas/EmailQuery",
                    "github_repository": "#/components/schemas/GithubRepositoryQuery",
                    "ip": "#/components/schemas/IpQuery",
                    "keyword": "#/components/schemas/KeywordQuery",
                    "name": "#/components/schemas/NameQuery",
                    "query_string": "#/components/schemas/QueryStringQuery",
                    "secret": "#/components/schemas/SecretQuery",
                    "username": "#/components/schemas/UsernameQuery"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "filters": {
            "$ref": "#/components/schemas/FeedFilters"
          },
          "order": {
            "$ref": "#/components/schemas/FeedOrder",
            "default": "desc"
          },
          "from": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From"
          },
          "size": {
            "type": "integer",
            "maximum": 10.0,
            "exclusiveMinimum": 0.0,
            "title": "Size",
            "default": 10
          }
        },
        "type": "object",
        "title": "FeedRequestBody"
      },
      "FeedType": {
        "type": "string",
        "enum": [
          "tenant",
          "identifier",
          "group"
        ],
        "title": "FeedType"
      },
      "FileAnalysisSubmit": {
        "properties": {
          "i_agree_to_tos": {
            "type": "boolean",
            "title": "I Agree To Tos"
          },
          "activity_uid": {
            "type": "string",
            "title": "Activity Uid"
          }
        },
        "type": "object",
        "required": [
          "i_agree_to_tos",
          "activity_uid"
        ],
        "title": "FileAnalysisSubmit"
      },
      "FilterSeverities": {
        "properties": {
          "severities": {
            "items": {
              "$ref": "#/components/schemas/FilterSeverity"
            },
            "type": "array",
            "title": "Severities"
          }
        },
        "type": "object",
        "title": "FilterSeverities"
      },
      "FilterSeverity": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "color": {
            "type": "string",
            "title": "Color"
          }
        },
        "type": "object",
        "required": [
          "value",
          "label",
          "color"
        ],
        "title": "FilterSeverity"
      },
      "FilterSourceType": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "label": {
            "type": "string",
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "value",
          "label"
        ],
        "title": "FilterSourceType"
      },
      "FilterSourceTypeCategory": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "types": {
            "items": {
              "$ref": "#/components/schemas/FilterSourceType"
            },
            "type": "array",
            "title": "Types"
          }
        },
        "type": "object",
        "required": [
          "value",
          "label"
        ],
        "title": "FilterSourceTypeCategory"
      },
      "FilterSourceTypes": {
        "properties": {
          "categories": {
            "items": {
              "$ref": "#/components/schemas/FilterSourceTypeCategory"
            },
            "type": "array",
            "title": "Categories"
          }
        },
        "type": "object",
        "title": "FilterSourceTypes"
      },
      "GithubRepositoryQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "github_repository",
            "title": "Type"
          },
          "repo_owner": {
            "type": "string",
            "title": "Repo Owner"
          },
          "repo_name": {
            "type": "string",
            "title": "Repo Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "repo_owner",
          "repo_name"
        ],
        "title": "GithubRepositoryQuery"
      },
      "GlobalSearchRequestBody": {
        "properties": {
          "query": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GithubRepositoryQuery"
              },
              {
                "$ref": "#/components/schemas/UsernameQuery"
              },
              {
                "$ref": "#/components/schemas/DomainQuery"
              },
              {
                "$ref": "#/components/schemas/BrandQuery"
              },
              {
                "$ref": "#/components/schemas/NameQuery"
              },
              {
                "$ref": "#/components/schemas/KeywordQuery"
              },
              {
                "$ref": "#/components/schemas/QueryStringQuery"
              },
              {
                "$ref": "#/components/schemas/BinQuery"
              },
              {
                "$ref": "#/components/schemas/IpQuery"
              },
              {
                "$ref": "#/components/schemas/EmailQuery"
              },
              {
                "$ref": "#/components/schemas/SecretQuery"
              },
              {
                "$ref": "#/components/schemas/CredentialsQuery"
              },
              {
                "$ref": "#/components/schemas/AzureTenantQuery"
              }
            ],
            "title": "Query",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "azure_tenant": "#/components/schemas/AzureTenantQuery",
                "bin": "#/components/schemas/BinQuery",
                "brand": "#/components/schemas/BrandQuery",
                "credentials": "#/components/schemas/CredentialsQuery",
                "domain": "#/components/schemas/DomainQuery",
                "email": "#/components/schemas/EmailQuery",
                "github_repository": "#/components/schemas/GithubRepositoryQuery",
                "ip": "#/components/schemas/IpQuery",
                "keyword": "#/components/schemas/KeywordQuery",
                "name": "#/components/schemas/NameQuery",
                "query_string": "#/components/schemas/QueryStringQuery",
                "secret": "#/components/schemas/SecretQuery",
                "username": "#/components/schemas/UsernameQuery"
              }
            }
          },
          "filters": {
            "$ref": "#/components/schemas/FeedFilters"
          },
          "order": {
            "$ref": "#/components/schemas/FeedOrder",
            "default": "desc"
          },
          "from": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From"
          },
          "size": {
            "type": "integer",
            "maximum": 10.0,
            "exclusiveMinimum": 0.0,
            "title": "Size",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "GlobalSearchRequestBody"
      },
      "GroupFilters": {
        "properties": {
          "query_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query String"
          },
          "identifier_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IdentifierType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier Types"
          },
          "enable_states": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IdentifierEnableState"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable States"
          },
          "properties": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IdentifierProperty"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "source_group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdentifierSourceGroup"
              },
              {
                "type": "null"
              }
            ]
          },
          "group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string",
                "const": "NO_GROUP"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id",
            "default": "NO_GROUP"
          },
          "parent_identifier_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Identifier Id"
          },
          "type": {
            "type": "string",
            "const": "group",
            "title": "Type",
            "default": "group"
          }
        },
        "type": "object",
        "title": "GroupFilters"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IdentifierEnableState": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED",
          "DISABLED_ORPHAN",
          "DISABLED_TENANT"
        ],
        "title": "IdentifierEnableState"
      },
      "IdentifierFilters": {
        "properties": {
          "query_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query String"
          },
          "identifier_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IdentifierType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier Types"
          },
          "enable_states": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IdentifierEnableState"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable States"
          },
          "properties": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IdentifierProperty"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "source_group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdentifierSourceGroup"
              },
              {
                "type": "null"
              }
            ]
          },
          "group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string",
                "const": "NO_GROUP"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id",
            "default": "NO_GROUP"
          },
          "parent_identifier_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Identifier Id"
          },
          "type": {
            "type": "string",
            "const": "identifier",
            "title": "Type",
            "default": "identifier"
          }
        },
        "type": "object",
        "title": "IdentifierFilters"
      },
      "IdentifierProperty": {
        "type": "string",
        "enum": [
          "recent",
          "interest",
          "resolves",
          "reachable",
          "unresolvable",
          "unreachable"
        ],
        "title": "IdentifierProperty"
      },
      "IdentifierRecommendationFilters": {
        "properties": {
          "query_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query String"
          },
          "asset_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AssetType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Types"
          },
          "recommendation_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdentifierRecommendationState"
              },
              {
                "type": "null"
              }
            ]
          },
          "type": {
            "type": "string",
            "const": "identifier_recommendation",
            "title": "Type",
            "default": "identifier_recommendation"
          },
          "identifier_recommendation_group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier Recommendation Group Id"
          }
        },
        "type": "object",
        "title": "IdentifierRecommendationFilters"
      },
      "IdentifierRecommendationGroupFilters": {
        "properties": {
          "query_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query String"
          },
          "asset_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AssetType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Types"
          },
          "recommendation_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdentifierRecommendationState"
              },
              {
                "type": "null"
              }
            ]
          },
          "type": {
            "type": "string",
            "const": "identifier_recommendation_group",
            "title": "Type",
            "default": "identifier_recommendation_group"
          }
        },
        "type": "object",
        "title": "IdentifierRecommendationGroupFilters"
      },
      "IdentifierRecommendationState": {
        "type": "string",
        "enum": [
          "recommended",
          "accepted",
          "rejected"
        ],
        "title": "IdentifierRecommendationState"
      },
      "IdentifierScope": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "is_disabled": {
            "type": "boolean",
            "title": "Is Disabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "IdentifierScope"
      },
      "IdentifierSourceGroup": {
        "type": "string",
        "enum": [
          "ALL",
          "USER",
          "SYSTEM"
        ],
        "title": "IdentifierSourceGroup"
      },
      "IdentifierType": {
        "type": "string",
        "enum": [
          "domain",
          "brand",
          "name",
          "keyword",
          "github_repository",
          "username",
          "email",
          "search_query",
          "dork_query",
          "bin",
          "ip",
          "secret",
          "azure_tenant"
        ],
        "title": "IdentifierType"
      },
      "IpQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "ip",
            "title": "Type"
          },
          "ip": {
            "type": "string",
            "title": "Ip"
          }
        },
        "type": "object",
        "required": [
          "type",
          "ip"
        ],
        "title": "IpQuery"
      },
      "KeywordQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "keyword",
            "title": "Type"
          },
          "keyword": {
            "type": "string",
            "title": "Keyword"
          }
        },
        "type": "object",
        "required": [
          "type",
          "keyword"
        ],
        "title": "KeywordQuery"
      },
      "Language": {
        "type": "string",
        "enum": [
          "en",
          "fr"
        ],
        "title": "Language"
      },
      "LeakedCredentialsBulkActionType": {
        "type": "string",
        "enum": [
          "remediate",
          "unremediate",
          "ignore",
          "unignore"
        ],
        "title": "LeakedCredentialsBulkActionType"
      },
      "NameQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "name",
            "title": "Type"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "is_strict": {
            "type": "boolean",
            "title": "Is Strict"
          }
        },
        "type": "object",
        "required": [
          "type",
          "first_name",
          "last_name",
          "is_strict"
        ],
        "title": "NameQuery"
      },
      "OrderType": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "title": "OrderType"
      },
      "OverTimeInterval": {
        "type": "string",
        "enum": [
          "daily",
          "weekly",
          "monthly",
          "yearly"
        ],
        "title": "OverTimeInterval"
      },
      "PagedCookieConfigurations": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CookieMonitoringConfigurationItem"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PagedCookieConfigurations"
      },
      "PaginatedResults_Alert_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Alert"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PaginatedResults[Alert]"
      },
      "PaginatedResults_ConversationSummaryRequestResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ConversationSummaryRequestResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PaginatedResults[ConversationSummaryRequestResponse]"
      },
      "PaginatedResults_CredentialValidationReponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CredentialValidationReponse"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PaginatedResults[CredentialValidationReponse]"
      },
      "PaginatedResults_EnrichedBulkAction_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EnrichedBulkAction"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PaginatedResults[EnrichedBulkAction]"
      },
      "PaginatedResults_FeedItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FeedItem"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PaginatedResults[FeedItem]"
      },
      "PaginatedResults_PartialAlertChannel_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PartialAlertChannel"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PaginatedResults[PartialAlertChannel]"
      },
      "PaginatedResults_TenantIntegration_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TenantIntegration"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PaginatedResults[TenantIntegration]"
      },
      "PartialAlert": {
        "properties": {
          "feed_definition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedDefinition"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "search_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SearchType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Types"
          },
          "experimental_search_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experimental Search Types"
          },
          "risks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RiskScore"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Risks"
          },
          "frequency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency"
          },
          "start_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start At"
          },
          "alert_channel_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alert Channel Id"
          }
        },
        "type": "object",
        "title": "PartialAlert"
      },
      "PartialAlertChannel": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/AlertType"
          },
          "state": {
            "$ref": "#/components/schemas/AlertChannelState"
          },
          "alert_count": {
            "type": "integer",
            "title": "Alert Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "state",
          "alert_count"
        ],
        "title": "PartialAlertChannel"
      },
      "QueryStringQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "query_string",
            "title": "Type"
          },
          "query_string": {
            "type": "string",
            "title": "Query String"
          }
        },
        "type": "object",
        "required": [
          "type",
          "query_string"
        ],
        "title": "QueryStringQuery"
      },
      "RelatedConversationRequest": {
        "properties": {
          "uid": {
            "type": "string",
            "title": "Uid"
          },
          "direction": {
            "$ref": "#/components/schemas/ConversationSearchAfterDirection",
            "default": "next"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "default": 10
          },
          "search_after": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search After"
          }
        },
        "type": "object",
        "required": [
          "uid"
        ],
        "title": "RelatedConversationRequest"
      },
      "RelatedConversationResponse": {
        "properties": {
          "conversation_messages": {
            "items": {
              "$ref": "#/components/schemas/ConversationMessage"
            },
            "type": "array",
            "title": "Conversation Messages"
          },
          "conversation_name": {
            "type": "string",
            "title": "Conversation Name"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          },
          "previous": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous"
          }
        },
        "type": "object",
        "required": [
          "conversation_messages",
          "conversation_name"
        ],
        "title": "RelatedConversationResponse"
      },
      "ReportCreationPayload": {
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "title": "Title"
          },
          "author": {
            "type": "string",
            "minLength": 1,
            "title": "Author"
          },
          "report_type": {
            "$ref": "#/components/schemas/pyro__reports__report_models__ReportType"
          }
        },
        "type": "object",
        "required": [
          "title",
          "author",
          "report_type"
        ],
        "title": "ReportCreationPayload"
      },
      "ReportRequestInfoResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "report": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ApiReport"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ReportRequestInfoResponse"
      },
      "ReportRequestPayload": {
        "properties": {
          "report_title": {
            "type": "string",
            "title": "Report Title"
          },
          "question": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Question"
          },
          "time_range_type": {
            "$ref": "#/components/schemas/TimeRangeType",
            "default": "all"
          },
          "time_range_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Range From"
          },
          "time_range_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Range To"
          },
          "included_keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Included Keywords"
          },
          "excluded_keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded Keywords"
          }
        },
        "type": "object",
        "required": [
          "report_title"
        ],
        "title": "ReportRequestPayload"
      },
      "ReportRequestResponse": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          }
        },
        "type": "object",
        "required": [
          "request_id"
        ],
        "title": "ReportRequestResponse"
      },
      "ReportStatus": {
        "type": "string",
        "enum": [
          "draft",
          "processing",
          "completed"
        ],
        "title": "ReportStatus"
      },
      "ReportType-Output": {
        "type": "string",
        "enum": [
          "v1",
          "event_based",
          "feed_based"
        ],
        "title": "ReportType"
      },
      "RequestStatus": {
        "type": "string",
        "enum": [
          "processing",
          "completed",
          "error"
        ],
        "title": "RequestStatus"
      },
      "RiskScore": {
        "type": "integer",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "title": "RiskScore"
      },
      "SearchType": {
        "type": "string",
        "enum": [
          "attachment",
          "listing",
          "ransomleak",
          "forum_post",
          "forum_topic",
          "forum_profile",
          "blog_post",
          "seller",
          "paste",
          "leak",
          "chat_message",
          "chat_message/telegram",
          "domain",
          "bot",
          "stealer_log",
          "infected_devices",
          "driller",
          "driller_forum_topic",
          "driller_forum_post",
          "driller_profile",
          "cc",
          "ccbin",
          "financial_data",
          "leaked_data",
          "leaked_file",
          "document",
          "account",
          "actor",
          "forum_content",
          "blog_content",
          "profile",
          "leaked_credential",
          "illicit_networks",
          "open_web",
          "domains",
          "leaks",
          "social_media_account",
          "social_media",
          "source_code",
          "source_code_secrets",
          "source_code_files",
          "stack_exchange",
          "google",
          "service",
          "driller_host",
          "buckets",
          "bucket",
          "bucket_object",
          "whois",
          "ad",
          "ads",
          "experimental"
        ],
        "title": "SearchType"
      },
      "SecretQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "secret",
            "title": "Type"
          },
          "secret": {
            "type": "string",
            "title": "Secret"
          }
        },
        "type": "object",
        "required": [
          "type",
          "secret"
        ],
        "title": "SecretQuery"
      },
      "Severity": {
        "type": "string",
        "enum": [
          "info",
          "low",
          "medium",
          "high",
          "critical"
        ],
        "title": "Severity"
      },
      "SortType": {
        "type": "string",
        "enum": [
          "id",
          "title",
          "author",
          "created_at",
          "updated_at",
          "status"
        ],
        "title": "SortType"
      },
      "TagListPayload": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagPayload"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "tags"
        ],
        "title": "TagListPayload"
      },
      "TagPayload": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "is_visible": {
            "type": "boolean",
            "title": "Is Visible"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "description",
          "is_visible"
        ],
        "title": "TagPayload"
      },
      "TenantIntegration": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "integer",
            "title": "Tenant Id"
          },
          "params": {
            "$ref": "#/components/schemas/EntraIDParams"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "params",
          "is_enabled",
          "created_at",
          "updated_at"
        ],
        "title": "TenantIntegration"
      },
      "ThreatFlowReportDownloadFormat": {
        "type": "string",
        "enum": [
          "docx",
          "pdf"
        ],
        "title": "ThreatFlowReportDownloadFormat"
      },
      "ThreatFlowReportFormatType": {
        "type": "string",
        "enum": [
          "simple_summary",
          "expanded_summary"
        ],
        "title": "ThreatFlowReportFormatType"
      },
      "ThreatFlowTenantConfigPayload": {
        "properties": {
          "ignored_tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ignored Tags"
          },
          "subscribed_to_newsletter": {
            "type": "boolean",
            "title": "Subscribed To Newsletter"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails"
          }
        },
        "type": "object",
        "required": [
          "ignored_tags",
          "subscribed_to_newsletter",
          "emails"
        ],
        "title": "ThreatFlowTenantConfigPayload"
      },
      "TimeRangeType": {
        "type": "string",
        "enum": [
          "all",
          "last_24h",
          "last_2d",
          "last_7d",
          "last_1m",
          "last_3m",
          "last_6m",
          "range"
        ],
        "title": "TimeRangeType"
      },
      "UpdateAlertChannel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AlertChannelEmailParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelSlackParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelDiscordParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelSplunkParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelChannelParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelSentinelParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelCgcdParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelTeamsParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelJiraParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelServicenowParams"
              },
              {
                "$ref": "#/components/schemas/AlertChannelWebhookParams"
              }
            ],
            "title": "Params",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "azure_sentinel": "#/components/schemas/AlertChannelSentinelParams",
                "cgcd": "#/components/schemas/AlertChannelCgcdParams",
                "channel": "#/components/schemas/AlertChannelChannelParams",
                "discord": "#/components/schemas/AlertChannelDiscordParams",
                "email": "#/components/schemas/AlertChannelEmailParams",
                "jira": "#/components/schemas/AlertChannelJiraParams",
                "servicenow": "#/components/schemas/AlertChannelServicenowParams",
                "slack": "#/components/schemas/AlertChannelSlackParams",
                "splunk": "#/components/schemas/AlertChannelSplunkParams",
                "teams": "#/components/schemas/AlertChannelTeamsParams",
                "webhook": "#/components/schemas/AlertChannelWebhookParams"
              }
            }
          },
          "state": {
            "$ref": "#/components/schemas/AlertChannelState"
          }
        },
        "type": "object",
        "required": [
          "name",
          "params",
          "state"
        ],
        "title": "UpdateAlertChannel"
      },
      "UpdateTenantIntegration": {
        "properties": {
          "params": {
            "$ref": "#/components/schemas/EntraIDParams"
          }
        },
        "type": "object",
        "required": [
          "params"
        ],
        "title": "UpdateTenantIntegration"
      },
      "UsernameQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "username",
            "title": "Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          }
        },
        "type": "object",
        "required": [
          "type",
          "username"
        ],
        "title": "UsernameQuery"
      },
      "ValidatedCredential": {
        "properties": {
          "is_valid": {
            "type": "boolean",
            "title": "Is Valid"
          }
        },
        "type": "object",
        "required": [
          "is_valid"
        ],
        "title": "ValidatedCredential"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WebhookBasicAuth": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "WebhookBasicAuth"
      },
      "firework__backend__api4__models__PaginatedResults_Report___1": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/pyro__reports__report_datamodels__Report"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PaginatedResults[Report]"
      },
      "firework__backend__api4__models__PaginatedResults_Report___2": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/pyro__threat_flow__core__reports__datamodels__Report"
            },
            "type": "array",
            "title": "Items"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next"
          }
        },
        "type": "object",
        "required": [
          "items",
          "next"
        ],
        "title": "PaginatedResults[Report]"
      },
      "firework__backend__api4__reports__report_datamodels__ReportResponse": {
        "properties": {
          "report": {
            "$ref": "#/components/schemas/pyro__reports__report_datamodels__Report"
          }
        },
        "type": "object",
        "required": [
          "report"
        ],
        "title": "ReportResponse"
      },
      "pyro__reports__report_datamodels__Report": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "tenant_id": {
            "type": "integer",
            "title": "Tenant Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "author": {
            "type": "string",
            "title": "Author"
          },
          "report_type": {
            "$ref": "#/components/schemas/ReportType-Output"
          },
          "include_flare_event_links": {
            "type": "boolean",
            "title": "Include Flare Event Links"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uri"
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived",
            "default": false
          },
          "status": {
            "$ref": "#/components/schemas/ReportStatus",
            "default": "draft"
          },
          "is_ready_for_download": {
            "type": "boolean",
            "title": "Is Ready For Download",
            "default": false
          },
          "is_mutable": {
            "type": "boolean",
            "title": "Is Mutable",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "title",
          "author",
          "report_type",
          "include_flare_event_links",
          "created_at",
          "updated_at"
        ],
        "title": "Report"
      },
      "pyro__reports__report_models__ReportType": {
        "type": "string",
        "enum": [
          "v1",
          "event_based",
          "feed_based"
        ],
        "title": "ReportType"
      },
      "pyro__threat_flow__core__reports__datamodels__Report": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "format_type": {
            "$ref": "#/components/schemas/ThreatFlowReportFormatType",
            "default": "simple_summary"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "highlights": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Highlights"
          },
          "related_activity_uids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Related Activity Uids"
          },
          "prompt_preset_uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Preset Uid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "reading_time": {
            "type": "integer",
            "title": "Reading Time"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "subtitle",
          "summary",
          "content",
          "tags",
          "highlights",
          "related_activity_uids",
          "prompt_preset_uid",
          "created_at",
          "published_at",
          "updated_at",
          "reading_time",
          "tenant_id",
          "organization_id"
        ],
        "title": "Report"
      },
      "pyro__threat_flow__core__reports__report_store__ReportType": {
        "type": "string",
        "enum": [
          "custom",
          "standard"
        ],
        "title": "ReportType"
      },
      "pyro__threat_flow__web__v4__reports__models__ReportResponse": {
        "properties": {
          "report": {
            "$ref": "#/components/schemas/pyro__threat_flow__core__reports__datamodels__Report"
          }
        },
        "type": "object",
        "required": [
          "report"
        ],
        "title": "ReportResponse"
      }
    }
  }
}
